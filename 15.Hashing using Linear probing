#include <stdio.h>
#define SIZE 10

int hashTable[SIZE];

// Function to initialize hash table
void initHashTable() {
    for (int i = 0; i < SIZE; i++) {
        hashTable[i] = -1; // -1 means empty
    }
}

// Hash function
int hashFunction(int key) {
    return key % SIZE;
}

// Insert using linear probing
void insert(int key) {
    int index = hashFunction(key);
    int startIndex = index; // To check if table is full

    while (hashTable[index] != -1) {
        index = (index + 1) % SIZE;
        if (index == startIndex) {
            printf("Hash table is full! Cannot insert %d\n", key);
            return;
        }
    }
    hashTable[index] = key;
    printf("%d inserted at index %d\n", key, index);
}

// Search key in hash table
void search(int key) {
    int index = hashFunction(key);
    int startIndex = index;

    while (hashTable[index] != -1) {
        if (hashTable[index] == key) {
            printf("%d found at index %d\n", key, index);
            return;
        }
        index = (index + 1) % SIZE;
        if (index == startIndex) break;
    }
    printf("%d not found in the hash table\n", key);
}

// Display hash table
void display() {
    printf("Hash Table: \n");
    for (int i = 0; i < SIZE; i++) {
        if (hashTable[i] != -1)
            printf("Index %d: %d\n", i, hashTable[i]);
        else
            printf("Index %d: EMPTY\n", i);
    }
}

int main() {
    int choice, key;
    initHashTable();

    while (1) {
        printf("\n--- Hash Table Menu ---\n");
        printf("1. Insert\n2. Search\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter key to insert: ");
                scanf("%d", &key);
                insert(key);
                break;
            case 2:
                printf("Enter key to search: ");
                scanf("%d", &key);
                search(key);
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
}
